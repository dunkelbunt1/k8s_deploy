worker_processes auto;
events {
	worker_connections 1024;
	use epoll;
	multi_accept on;
}
http {
	tcp_nodelay on;
	# this is necessary for us to be able to disable request buffering in all cases
	proxy_http_version 1.1;
	upstream registry {
		server localhost:5000;
	}
	upstream ui {
		server localhost:6002;
	}
	server {
		listen 80;
		#server_name 192.168.10.57;
		# disable any limits to avoid HTTP 413 for large image uploads
		client_max_body_size 0;
		# required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
		chunked_transfer_encoding on;
		# rewrite ^/(.*) https://$server_name:443/$1 permanent;
		location / {
			proxy_pass http://localhost:6002/;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# When setting up Harbor behind other proxy, such as an Nginx instance, remove the below line if the proxy already has similar settings.
			proxy_set_header X-Forwarded-Proto $scheme;
		
			proxy_buffering off;
			proxy_request_buffering off;
		}
		location /v1/ {
			return 404;
		}
		location /v2/ {
			proxy_pass http://localhost:5000/v2/;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# When setting up Harbor behind other proxy, such as an Nginx instance, remove the below line if the proxy already has similar settings.
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_buffering off;
			proxy_request_buffering off;
		}
		location /service/ {
			proxy_pass http://localhost:6002/service/;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		
			# When setting up Harbor behind other proxy, such as an Nginx instance, remove the below line if the proxy already has similar settings.
			proxy_set_header X-Forwarded-Proto $scheme;
		
			proxy_buffering off;
			proxy_request_buffering off;
		}
	}
}
