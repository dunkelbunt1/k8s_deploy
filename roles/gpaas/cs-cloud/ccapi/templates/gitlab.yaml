apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: gitlab-redis-data-pvc
  name: gitlab-redis-data-pvc
  namespace: kube-public
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: gitlab-postgresql-data-pvc
  name: gitlab-postgresql-data-pvc
  namespace: kube-public
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: gitlab-data-pvc
  name: gitlab-data-pvc
  namespace: kube-public
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1G
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab-redis
  namespace: kube-public
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: gitlab-redis
    spec:
      containers:
      - name: redis
        image: "{{BASE_IMAGE_URL}}/{{ gitlab_redis_image }}"
        ports:
        - name: redis
          containerPort: 6379
        resources:
          requests:
            cpu: {{ gitlab_redis_cpu_requests }}
            memory: {{ gitlab_redis_mem_requests }}
          limits:
            cpu: {{ gitlab_redis_cpu_limit }}
            memory: {{ gitlab_redis_mem_limit }}
        volumeMounts:
        - mountPath: /var/lib/redis
          name: gitlab-redis-data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: gitlab-redis-data
        persistentVolumeClaim:
          claimName: gitlab-redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab-redis
  namespace: kube-public
  labels:
    name: gitlab-redis
spec:
  selector:
    name: gitlab-redis
  ports:
    - name: redis
      port: 6379
      targetPort: redis
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab-postgresql
  namespace: kube-public
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: gitlab-postgresql
    spec:
      containers:
      - name: postgresql
        image: "{{BASE_IMAGE_URL}}/{{ gitlab_postgresql_image }}"
        imagePullPolicy: Always
        env:
        - name: DB_USER
          value: gitlab
        - name: DB_PASS
          value: +BP52QIxpT/flVCMpL3KXA==
        - name: DB_NAME
          value: gitlab_production
        - name: DB_EXTENSION
          value: pg_trgm
        ports:
        - name: postgres
          containerPort: 5432
        resources:
          requests:
            cpu: {{ gitlab_postgresql_cpu_requests }}
            memory: {{ gitlab_postgresql_mem_requests }}
          limits:
            cpu: {{ gitlab_postgresql_cpu_limit }}
            memory: {{ gitlab_postgresql_mem_limit }}
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: gitlab-postgresql-data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 30
          timeoutSeconds: 5
      volumes:
      - name: gitlab-postgresql-data
        persistentVolumeClaim:
          claimName: gitlab-postgresql-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab-postgresql
  namespace: kube-public
  labels:
    name: gitlab-postgresql
spec:
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
  selector:
    name: gitlab-postgresql
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab
  namespace: kube-public
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: gitlab
        app: gitlab
    spec:
      containers:
      - name: gitlab
        image: "{{BASE_IMAGE_URL}}/{{ gitlab_image }}"
        imagePullPolicy: Always
        env:
        - name: TZ
          value: Europe/Stockholm
        - name: GITLAB_TIMEZONE
          value: Stockholm
        - name: DEBUG
          value: "false"
        - name: GITLAB_SECRETS_DB_KEY_BASE
          value: P26qS5+Csz50Dkd0DLM2oN9owVBFg0PB
        - name: GITLAB_SECRETS_SECRET_KEY_BASE
          value: KVaMTKLAIElEp0s4L02c1O9JCP0Rfapb
        - name: GITLAB_SECRETS_OTP_KEY_BASE
          value: nXJJ358Qnci0yF9qpAsLrF2vImaoFR03
        - name: GITLAB_ROOT_PASSWORD
          value: "{{gitlab_root_password}}"
        - name: GITLAB_ROOT_EMAIL
          value: "{{gitlab_root_email}}"
        - name: GITLAB_HOST
          value: "{{gitlab_host}}"
        - name: GITLAB_PORT
          value: "80"
        - name: GITLAB_SSH_HOST
          value: "{{gitlab_ssh_host}}"
        - name: GITLAB_SSH_PORT
          value: "1022"

        - name: GITLAB_NOTIFY_ON_BROKEN_BUILDS
          value: "true"
        - name: GITLAB_NOTIFY_PUSHER
          value: "false"

        - name: GITLAB_BACKUP_SCHEDULE
          value: daily
        - name: GITLAB_BACKUP_TIME
          value: 01:00

        - name: DB_TYPE
          value: postgres
        - name: DB_HOST
          value: gitlab-postgresql
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: gitlab
        - name: DB_PASS
          value: +BP52QIxpT/flVCMpL3KXA==
        - name: DB_NAME
          value: gitlab_production

        - name: REDIS_HOST
          value: gitlab-redis
        - name: REDIS_PORT
          value: "6379"

        - name: SMTP_ENABLED
          value: "false"
        - name: SMTP_DOMAIN
          value: ""
        - name: SMTP_HOST
          value: ""
        - name: SMTP_PORT
          value: ""
        - name: SMTP_USER
          value: ""
        - name: SMTP_PASS
          value: ""
        - name: SMTP_STARTTLS
          value: "true"
        - name: SMTP_AUTHENTICATION
          value: login

        - name: IMAP_ENABLED
          value: "false"
        - name: IMAP_HOST
          value: imap.gmail.com
        - name: IMAP_PORT
          value: "993"
        - name: IMAP_USER
          value: mailer@example.com
        - name: IMAP_PASS
          value: password
        - name: IMAP_SSL
          value: "true"
        - name: IMAP_STARTTLS
          value: "false"
        ports:
        - name: http
          containerPort: 80
        - name: ssh
          containerPort: 22
        resources:
          requests:
            cpu: {{ gitlab_cpu_requests }}
            memory: {{ gitlab_mem_requests }}
          limits:
            cpu: {{ gitlab_cpu_limit }}
            memory: {{ gitlab_mem_limit }}
        volumeMounts:
        - mountPath: /home/git/data
          name: gitlab-data
      volumes:
      - name: gitlab-data
        persistentVolumeClaim:
          claimName: gitlab-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: kube-public
  labels:
    name: gitlab
spec:
  selector:
    name: gitlab
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: ssh
      port: 1022
      targetPort: ssh
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitlab
  namespace: kube-public
  labels:
    name: gitlab
spec:
  rules:
  - host: {{gitlab_host}}
    http:
      paths:
      - path: /
        backend:
          serviceName: gitlab
          servicePort: 80
  - host: {{gitlab_ssh_host}}
    http:
      paths:
      - path: /
        backend:
          serviceName: gitlab
          servicePort: 1022