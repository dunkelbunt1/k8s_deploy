---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-config
  namespace: uimp-cloud
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
data:
  metricbeat.yml: |-
    metricbeat.config.modules:

      path: ${path.config}/modules.d/*.yml
    
      reload.period: 10s
    
      reload.enabled: true
    
    metricbeat.max_start_delay: 30s
    #-------------------------- Elasticsearch output -------------------------------
    output.elasticsearch:
      hosts: ["elasticsearch-service:9200"]
      index: "metricbeat-%{+yyyy.MM.dd}"
    #============================== setup =====================================
    setup.template.name: "metricbeat"
    setup.template.pattern: "metricbeat-*"
    setup.template.fields: "/usr/share/metricbeat/fields.yml"
    setup.template.settings:
      index:
        number_of_shards: 5
    logging.to_files: true
    logging.level: warning
    logging.files:
    #-------------------------- logstash output -------------------------------
    #output.logstash:
    #  hosts: ["logstash-service-linux:5044"]
    #  loadbalance: true
    #  index: metricbeat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: uimp-cloud
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
data:
  system.yml: |-
    - module: system
      period: 30s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        - core
        - diskio
        - socket
      processes: ['.*']
      cpu.metrics:  ["normalized_percentages"]
    - module: system
      period: 1m
      metricsets:
        - filesystem
        # - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(etc|dev|sys|proc|cgroup|lib|hostfs/sys|hostfs/cgroup|hostfs/proc|hostfs/dev|hostfs/etc|hostfs/host|hostfs/lib|hostfs/data/docker|hostfs/data/kubelet|hostfs/run|usr|run)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 30s
      hosts: ["${NAME}:10255"]
  docker.yml: |-
    - module: docker
      metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network"]
      hosts: ["unix:///var/run/docker.sock"]
      period: 30s
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: uimp-cloud
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: metricbeat
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: metricbeat
      tolerations:
      - operator: "Exists"
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: {{BASE_IMAGE_URL}}/{{metricbeat_image}}
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        #- name: ELASTICSEARCH_HOST
        #  value: elasticsearch
        #- name: ELASTICSEARCH_PORT
        #  value: "9200"
        #- name: ELASTICSEARCH_USERNAME
        #  value: elastic
        #- name: ELASTICSEARCH_PASSWORD
        #  value: changeme
        #- name: ELASTIC_CLOUD_ID
        #  value:
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
        - name: root
          mountPath: /hostfs
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: config
        configMap:
          defaultMode: 0600
          name: metricbeat-config
      - name: modules
        configMap:
          defaultMode: 0600
          name: metricbeat-daemonset-modules
      - name: data
        emptyDir: {}
      - name: root
        hostPath:
          path: /
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-deployment-modules
  namespace: uimp-cloud
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
data:
  # This module requires `kube-state-metrics` up and running under `uimp-cloud` namespace
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - state_node
        - state_deployment
        - state_replicaset
        - state_pod
        - state_container
        # Uncomment this to get k8s events:
        - event
      period: 10s
      hosts: ["kube-state-metrics:8080"]
      add_metadata: true
      in_cluster: true
      enabled: true
---
# Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: metricbeat
  namespace: uimp-cloud
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: metricbeat
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: metricbeat
      containers:
      - name: metricbeat
        image: {{BASE_IMAGE_URL}}/{{metricbeat_image}}
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
        ]
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: metricbeat-config
      - name: modules
        configMap:
          defaultMode: 0600
          name: metricbeat-deployment-modules
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
subjects:
- kind: ServiceAccount
  name: metricbeat
  namespace: uimp-cloud
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: metricbeat
  labels:
    k8s-app: metricbeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - events
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: uimp-cloud
  labels:
    k8s-app: metricbeat
---